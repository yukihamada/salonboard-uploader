// upload_working.js - Âãï‰Ωú„Åô„ÇãÁîªÂÉè„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ
import { chromium } from '@playwright/test';
import dotenv from 'dotenv';

dotenv.config({ path: '.env.local' });

(async () => {
  const browser = await chromium.launch({
    headless: false,
    slowMo: 300
  });

  try {
    const page = await browser.newPage();
    
    console.log('‚ú® SalonBoardÁîªÂÉè„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÔºàÂãï‰ΩúÁâàÔºâ\n');
    
    // 1. „É≠„Ç∞„Ç§„É≥
    console.log('1Ô∏è‚É£ „É≠„Ç∞„Ç§„É≥...');
    await page.goto('https://salonboard.com/login/');
    await page.waitForTimeout(2000);
    
    await page.fill('input[name="userId"]', process.env.SB_ID);
    await page.fill('input[name="password"]', process.env.SB_PASS);
    await page.click('a:has-text("„É≠„Ç∞„Ç§„É≥"):visible');
    await page.waitForTimeout(3000);
    console.log('‚úÖ „É≠„Ç∞„Ç§„É≥ÂÆå‰∫Ü\n');
    
    // 2. „Çπ„Çø„Ç§„É´Á∑®ÈõÜÁîªÈù¢„Å∏
    console.log('2Ô∏è‚É£ „Çπ„Çø„Ç§„É´Á∑®ÈõÜÁîªÈù¢„Å∏ÁßªÂãï...');
    await page.goto('https://salonboard.com/CNB/draft/styleEdit/');
    await page.waitForTimeout(3000);
    console.log('‚úÖ „Çπ„Çø„Ç§„É´Á∑®ÈõÜÁîªÈù¢Ë°®Á§∫\n');
    
    // 3. ÁîªÂÉè„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ - IMGË¶ÅÁ¥†„Çí„ÇØ„É™„ÉÉ„ÇØ
    console.log('3Ô∏è‚É£ ÁîªÂÉè„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÈñãÂßã...\n');
    
    // FRONTÁîªÂÉè
    console.log('üì∏ FRONTÁîªÂÉè...');
    try {
      // ÁîªÂÉèË¶ÅÁ¥†„ÇíÁõ¥Êé•„ÇØ„É™„ÉÉ„ÇØ
      const frontImg = await page.$('img.img_new_no_photo[src*="style_image_upload"]');
      if (frontImg) {
        await frontImg.click();
        console.log('  ‚úì FRONTÁîªÂÉè„Ç®„É™„Ç¢„ÇØ„É™„ÉÉ„ÇØ');
        await page.waitForTimeout(2000);
        
        // „Éï„Ç°„Ç§„É´ÂÖ•Âäõ„ÅåÂá∫Áèæ„Åô„Çã„ÅÆ„ÇíÂæÖ„Å§
        const fileInput = await page.waitForSelector('input[type="file"]', {
          state: 'attached',
          timeout: 5000
        });
        
        if (fileInput) {
          await fileInput.setInputFiles('./images/front.jpg');
          console.log('  ‚úì FRONTÁîªÂÉèÈÅ∏ÊäûÂÆå‰∫Ü');
          await page.waitForTimeout(5000);
          
          // „Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÂÆå‰∫Ü„ÇíÁ¢∫Ë™ç
          console.log('  ‚è≥ „Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÂá¶ÁêÜ‰∏≠...');
          
          // „É¢„Éº„ÉÄ„É´„ÇÑ„ÉÄ„Ç§„Ç¢„É≠„Ç∞„ÇíÈñâ„Åò„Çã
          const closeBtn = await page.$('button:has-text("Èñâ„Åò„Çã"), button.close, .modal-close');
          if (closeBtn) {
            await closeBtn.click();
            await page.waitForTimeout(1000);
          }
          
          console.log('  ‚úÖ FRONTÁîªÂÉè„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÂÆå‰∫ÜÔºÅ\n');
        }
      }
    } catch (error) {
      console.log(`  ‚ùå „Ç®„É©„Éº: ${error.message}\n`);
    }
    
    // SIDEÁîªÂÉèÔºà2Áï™ÁõÆ„ÅÆimgË¶ÅÁ¥†Ôºâ
    console.log('üì∏ SIDEÁîªÂÉè...');
    try {
      const sideImgs = await page.$$('img.img_new_no_photo[src*="style_image_upload"]');
      if (sideImgs.length >= 2) {
        await sideImgs[1].click();
        console.log('  ‚úì SIDEÁîªÂÉè„Ç®„É™„Ç¢„ÇØ„É™„ÉÉ„ÇØ');
        await page.waitForTimeout(2000);
        
        const fileInput = await page.waitForSelector('input[type="file"]', {
          state: 'attached',
          timeout: 5000
        });
        
        if (fileInput) {
          await fileInput.setInputFiles('./images/side.jpg');
          console.log('  ‚úì SIDEÁîªÂÉèÈÅ∏ÊäûÂÆå‰∫Ü');
          await page.waitForTimeout(5000);
          
          const closeBtn = await page.$('button:has-text("Èñâ„Åò„Çã"), button.close, .modal-close');
          if (closeBtn) {
            await closeBtn.click();
            await page.waitForTimeout(1000);
          }
          
          console.log('  ‚úÖ SIDEÁîªÂÉè„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÂÆå‰∫ÜÔºÅ\n');
        }
      }
    } catch (error) {
      console.log(`  ‚ùå „Ç®„É©„Éº: ${error.message}\n`);
    }
    
    // BACKÁîªÂÉèÔºà3Áï™ÁõÆ„ÅÆimgË¶ÅÁ¥†Ôºâ
    console.log('üì∏ BACKÁîªÂÉè...');
    try {
      const backImgs = await page.$$('img.img_new_no_photo[src*="style_image_upload"]');
      if (backImgs.length >= 3) {
        await backImgs[2].click();
        console.log('  ‚úì BACKÁîªÂÉè„Ç®„É™„Ç¢„ÇØ„É™„ÉÉ„ÇØ');
        await page.waitForTimeout(2000);
        
        const fileInput = await page.waitForSelector('input[type="file"]', {
          state: 'attached',
          timeout: 5000
        });
        
        if (fileInput) {
          await fileInput.setInputFiles('./images/back.jpg');
          console.log('  ‚úì BACKÁîªÂÉèÈÅ∏ÊäûÂÆå‰∫Ü');
          await page.waitForTimeout(5000);
          
          const closeBtn = await page.$('button:has-text("Èñâ„Åò„Çã"), button.close, .modal-close');
          if (closeBtn) {
            await closeBtn.click();
            await page.waitForTimeout(1000);
          }
          
          console.log('  ‚úÖ BACKÁîªÂÉè„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÂÆå‰∫ÜÔºÅ\n');
        }
      }
    } catch (error) {
      console.log(`  ‚ùå „Ç®„É©„Éº: ${error.message}\n`);
    }
    
    // 4. „Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÁµêÊûúÁ¢∫Ë™ç
    console.log('4Ô∏è‚É£ „Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÁµêÊûúÁ¢∫Ë™ç...\n');
    
    // „Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Åï„Çå„ÅüÁîªÂÉè„ÇíÁ¢∫Ë™ç
    const uploadedImages = await page.$$eval('img', imgs => {
      return imgs.filter(img => {
        const src = img.src || '';
        return !src.includes('style_image_upload.png') && 
               (src.includes('temp') || src.includes('upload') || src.includes('styleImage'));
      }).map(img => ({
        src: img.src.substring(0, 60) + '...',
        width: img.width,
        height: img.height
      }));
    });
    
    console.log(`„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Åï„Çå„ÅüÁîªÂÉè: ${uploadedImages.length}Êûö`);
    uploadedImages.forEach((img, i) => {
      console.log(`  [${i+1}] ${img.src} (${img.width}x${img.height})`);
    });
    
    // 5. „Çπ„Çø„Ç§„É´ÊÉÖÂ†±ÂÖ•Âäõ
    console.log('\n5Ô∏è‚É£ „Çπ„Çø„Ç§„É´ÊÉÖÂ†±ÂÖ•Âäõ...');
    
    const timestamp = new Date().toLocaleString('ja-JP');
    
    try {
      // „Çπ„Çø„Ç§„É´Âêç
      await page.fill('#styleName, input[name="styleName"]', `„ÉÜ„Çπ„Éà_${timestamp}`);
      console.log('  ‚úì „Çπ„Çø„Ç§„É´ÂêçÂÖ•Âäõ');
      
      // „Çπ„Çø„Ç§„É™„Çπ„Éà„Ç≥„É°„É≥„Éà
      await page.fill('#comment, textarea[name="comment"]', 'Playwright„ÅßËá™Âãï„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Åó„Åæ„Åó„Åü');
      console.log('  ‚úì „Ç≥„É°„É≥„ÉàÂÖ•Âäõ');
    } catch (e) {
      console.log('  ‚ö†Ô∏è ‰∏ÄÈÉ®„ÅÆÂÖ•Âäõ„Çí„Çπ„Ç≠„ÉÉ„Éó');
    }
    
    // 6. ÊúÄÁµÇÁµêÊûú
    console.log('\n6Ô∏è‚É£ ÊúÄÁµÇÁµêÊûú...');
    await page.screenshot({ path: 'upload-success.png', fullPage: true });
    console.log('üì∏ ÊàêÂäüÁîªÈù¢: upload-success.png');
    
    console.log('\nüéâ ÁîªÂÉè„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÊàêÂäüÔºÅ');
    console.log('‚Äª Á¢∫Ë™çÂæå„ÄÅÊâãÂãï„Åß„ÄåÁôªÈå≤„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åó„Å¶„Åè„Å†„Åï„ÅÑ');
    console.log('‚Äª „Éñ„É©„Ç¶„Ç∂„ÅØÈñã„ÅÑ„Åü„Åæ„Åæ„Åß„Åô„ÄÇCtrl+C„ÅßÁµÇ‰∫Ü\n');
    
    // ÁÑ°ÈôêÂæÖÊ©ü
    await new Promise(() => {});
    
  } catch (error) {
    console.error('\n‚ùå „Ç®„É©„Éº:', error.message);
  }
})();